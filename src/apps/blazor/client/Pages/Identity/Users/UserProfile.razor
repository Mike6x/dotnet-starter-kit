@page "/identity/users/{Id}/profile"


<PageHeader Title="@Title" Header="@Title" SubHeader="@Description" />
@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}

else
{
    <MudTabs Elevation="25" Color="Color.Transparent" Rounded="true" PanelClass="mt-6">
        <MudTabPanel Text="General">
            <MudGrid>
                <MudItem xs="12" sm="4" md="3">
                    <MudCard Elevation="25">
                        <MudCardContent Style="padding:0px!important">
                            <div class="d-flex justify-center mb-4">
                                 @if (_imageUrl != null)
                                    {
                                        <MudAvatar Square="true" Style="height:250px; width:250px;" Elevation="5" Class="rounded-lg">
                                            <MudImage Src="@_imageUrl.ToString()"></MudImage>
                                        </MudAvatar>
                                    }
                                    else
                                    {
                                        <MudAvatar Color="Color.Secondary" Style="height:250px; width:250px;">@_firstLetterOfName</MudAvatar>
                                    }
                            </div>
                            <MudText Typo="Typo.h6" Align="Align.Center">@_profileModel.FirstName @_profileModel.LastName</MudText>
                            <MudText Align="Align.Center">@_profileModel.Email</MudText>
                        </MudCardContent>
                        <MudCardActions Class="d-flex justify-center">
                            <InputFile id="fileInput" OnChange="UploadFiles" hidden accept=".jpg,.jpeg,.png" />
                            <div style="padding-bottom:20px">
                            <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small"
                                StartIcon="@Icons.Material.Filled.CloudUpload" for="fileInput">
                                Upload
                            </MudButton>
                           @if (_imageUrl != null)
                            {
                                <MudButton HtmlTag="label" DisableElevation Variant="Variant.Filled" Color="Color.Info" Size="Size.Small" Target="_blank"
                                    StartIcon="@Icons.Material.Filled.RemoveRedEye" Href="@_imageUrl.ToString()" Style="margin-left: 5px;" >
                                    View
                                </MudButton>

                                <MudButton HtmlTag="label" DisableElevation Variant="Variant.Filled" Color="Color.Error" Size="Size.Small"
                                    StartIcon="@Icons.Material.Filled.Delete" OnClick="RemoveImageAsync" Style="margin-left: 5px;" >
                                    Delete
                                </MudButton>
                            }
                            </div>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
                <MudItem xs="12" sm="8" md="9">
                    <EditForm Model="@_profileModel" OnValidSubmit="UpdateUserAsync">
                    <MudCard Elevation="25">
                        <MudCardContent>
                            <MudGrid>
                                <DataAnnotationsValidator />
                                <CustomValidation @ref="_customValidation" />
                                <MudItem xs="12" md="4">
                                    <MudTextField @bind-Value="@_profileModel.UserName" For="@(() => _profileModel.UserName)"
                                        Label="User Name" Variant="Variant.Outlined" />
                                </MudItem>
                                <MudItem xs="12" md="4">
                                    <MudTextField @bind-Value="@_profileModel.FirstName" For="@(() => _profileModel.FirstName)"
                                        Label="First Name" Variant="Variant.Outlined" />
                                </MudItem>
                                <MudItem xs="12" md="4">
                                    <MudTextField @bind-Value="@_profileModel.LastName" For="@(() => _profileModel.LastName)"
                                        Label="Last Name" Variant="Variant.Outlined" />
                                </MudItem>

                               <MudItem xs="12" md="4">
                                    <MudTextField @bind-Value="@_profileModel.Email" Label="Email"
                                        For="@(() => _profileModel.Email)" Variant="Variant.Outlined"
                                        InputType="InputType.Email" Disabled=true />
                                </MudItem>
                                <MudItem xs="12" md="4">
                                    <MudTextField @bind-Value="@_profileModel.PhoneNumber"
                                        For="@(() => _profileModel.PhoneNumber)" Label="Phone Number"
                                        Variant="Variant.Outlined" />
                                </MudItem>
                                <MudItem xs="12" md="4">
                                </MudItem>

                                <MudItem xs="12" md="12">
                                    <MudTextField @bind-Value="@_profileModel.ImageUrl" For="@(() => _profileModel.ImageUrl)" Label="User Picture URL" Variant="Variant.Outlined" Disabled/>
                                </MudItem>

                                <MudItem xs="12" md="3">
                                    <MudTextField T="string" @bind-Value="@_profileModel.Password"
                                        For="@(() => @_profileModel.Password)" Label="Password" Variant="Variant.Outlined"
                                        InputType="_passwordInput" Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon"
                                        OnAdornmentClick="@(() => TogglePasswordVisibility())" />
                                </MudItem>
                                <MudItem xs="12" md="3">
                                    <MudTextField T="string" @bind-Value="@_profileModel.ConfirmPassword"
                                        For="@(() => _profileModel.ConfirmPassword)" Label="Password Confirmation"
                                        Variant="Variant.Outlined" InputType="_passwordInput" Adornment="Adornment.End"
                                        AdornmentIcon="@_passwordInputIcon"
                                        OnAdornmentClick="@(() => TogglePasswordVisibility())" />
                                </MudItem>

                                <MudItem xs="12" md="3">
                                    <MudDatePicker Label="LockedDate" Editable="true" @bind-Date="LockoutEndDate" DisableToolbar="true" Variant="Variant.Outlined" />
                                </MudItem>
                                <MudItem xs="12" md="3">
                                    <MudTimePicker Label="LockedTime" Editable="true" @bind-Time="LockoutEndTime" DisableToolbar="true" Variant="Variant.Outlined" />
                                </MudItem>

                                <MudItem xs="12" md="3">
                                    <MudCheckBox @bind-Value="_profileModel.IsActive" For="@(() => _profileModel.IsActive)" Label="Active"></MudCheckBox>
                                </MudItem>
                                <MudItem xs="12" md="3">
                                    <MudCheckBox @bind-Value="_profileModel.EmailConfirmed" For="@(() => _profileModel.EmailConfirmed)" Label="Email Confirmation"></MudCheckBox>
                                </MudItem>
                                <MudItem xs="12" md="3">
                                    <MudCheckBox @bind-Value="IsLocked" For="@(() => IsLocked)" Label="is Locked" ReadOnly></MudCheckBox>
                                </MudItem>
                                <MudItem xs="12" md="3">
                                        <MudCheckBox @bind-Value="_profileModel.IsOnline" For="@(() => _profileModel.IsOnline)" Label="Online" ReadOnly></MudCheckBox>
                                </MudItem>
                            </MudGrid>
                        </MudCardContent>
                        <MudCardActions Class="pb-4 pl-4">
                            <MudButton OnClick="BackToUsers" Variant="Variant.Filled"
                                StartIcon="@Icons.Material.Filled.ArrowBack" Style="margin-right: 5px;">Users</MudButton>
                            <MudButton OnClick="BackToEmplyees" Variant="Variant.Filled"
                                StartIcon="@Icons.Material.Filled.List" Style="margin-right: 5px;">Employees</MudButton>
                            <MudButton OnClick="ToggleUserStatusAsync" Variant="Variant.Filled" Color="Color.Warning"
                                StartIcon="@Icons.Material.Filled.ToggleOn" Style="margin-right: 5px;">Act/Dis</MudButton>
                            <MudButton OnClick="SendVerificationEmailAsync" Variant="Variant.Filled" Color="Color.Info"
                                StartIcon="@Icons.Material.Filled.MarkEmailUnread" Style="margin-right: 5px;">Verify Email</MudButton>
                            <MudButton OnClick="SendRecoveryPasswordEmailAsync" Variant="Variant.Filled" Color="Color.Success"
                                StartIcon="@Icons.Material.Filled.MarkEmailUnread" Style="margin-right: 5px;">Recovery Pass</MudButton>
                            <MudButton OnClick="UnlockUserAsync" Disabled="@(!IsLocked)" Variant="Variant.Filled" Color="Color.Tertiary"
                                StartIcon="@Icons.Material.Filled.LockReset" Style="margin-right: 5px;">Unlock</MudButton>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Secondary"
                                StartIcon="@Icons.Material.Filled.SystemUpdateAlt" Style="margin-right: 5px;">Update</MudButton>
                        </MudCardActions>

                    </MudCard>
                    </EditForm>
                </MudItem>
            </MudGrid>
        </MudTabPanel>

        <MudTabPanel Text="Reference">

        </MudTabPanel>

        <MudTabPanel Text="Audit Trails">
            <MudItem xs="12" md="2">
                @*<MudIconButton OnClick="LoadCreatByInfoAsync"
                Icon="@Icons.Material.Filled.InfoOutline" Color="Color.Info" Size="Size.Large"></MudIconButton>*@
            </MudItem>
            <MudItem xs="12" md="7">
                <MudTextField Disabled="true" For="@(() => _profileModel.CreatedBy)" @bind-Value="_profileModel.CreatedBy" Label="CreatedBy" />
            </MudItem>
            <MudItem xs="12" md="3">
                <MudTextField Disabled="true" For="@(() => _profileModel.CreatedOn)" @bind-Value="_profileModel.CreatedOn" Label="CreatedOn" />
            </MudItem>
            <MudItem xs="12" md="2">
                @*<MudIconButton OnClick="LoadLastModifiedByInfoAsync"
                Icon="@Icons.Material.Filled.InfoOutline" Color="Color.Info" Size="Size.Large"></MudIconButton>*@
            </MudItem>
            <MudItem xs="12" md="7">
                <MudTextField Disabled="true" For="@(() => _profileModel.LastModifiedBy)" @bind-Value="_profileModel.LastModifiedBy" Label="LastModifiedBy" />
            </MudItem>
            <MudItem xs="12" md="3">
                <MudTextField Disabled="true" For="@(() => _profileModel.LastModifiedOn)" @bind-Value="_profileModel.LastModifiedOn" Label="LastModifiedOn" />
            </MudItem>

        </MudTabPanel>

    </MudTabs>
}



@* else
{
    <MudGrid>
        <AuthorizeView>
            @if (_canToggleUserStatus)
            {
                <MudItem xs="12" sm="12" md="12">
                    <MudCard Outlined>
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.body1">Administrator Settings.</MudText>
                                <MudText Typo="Typo.body2">This is an Administrator Only View.</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent Class="pa-46" Style="padding:26px!important">
                            <MudGrid Style="padding-left:14px">
                                    <MudSwitch T="bool" @bind-Value="@_active" Color="Color.Primary" Label="Active?"></MudSwitch>
                                <MudSwitch T="bool" ReadOnly @bind-Value="@_emailConfirmed" Disabled Label="Email Confirmed?" Color="Color.Secondary"></MudSwitch>
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto"
                            OnClick="ToggleUserStatus" ButtonType="ButtonType.Submit">Save Changes
                                </MudButton>
                            </MudGrid>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        </AuthorizeView>
        <MudItem xs="12" sm="4" md="4">
            <MudCard Outlined>
                <MudCardContent Style="padding:0px!important">
                    <div class="d-flex justify-center mb-4">
                        @if (_imageUrl != null)
                        {
                            <MudAvatar Style=" width:100%;height:auto;border-radius:0px!important;">
                                <MudImage Src="@_imageUrl.ToString()"></MudImage>
                            </MudAvatar>
                        }
                        else
                        {
                            <MudAvatar Square="true" Color="Color.Primary" Style="width:100%;height:300px;">@_firstLetterOfName
                            </MudAvatar>
                        }
                    </div>
                    <MudText Typo="Typo.h6" Align="Align.Center">@_firstName @_lastName</MudText>
                    <MudText Align="Align.Center">@_email</MudText>
                </MudCardContent>
                <MudCardActions Class="d-flex justify-center">
                    <div style="padding-bottom:20px">
                        @if (_imageUrl != null)
                        {
                            <MudButton HtmlTag="label" DropShadow="false" Variant="Variant.Filled" Color="Color.Info"
                                       Size="Size.Small" Target="_blank" StartIcon="@Icons.Material.Filled.RemoveRedEye" Href="@_imageUrl.ToString()"
                        Style="margin-left: 5px;">
                               View
                            </MudButton>
                        }
                    </div>

                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="8" md="8">
            <MudCard Outlined>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText>Public Profile</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="12" md="6">
                            <MudField Label="First Name" Variant="Variant.Outlined">@_firstName</MudField>
                        </MudItem>
                        <MudItem xs="12" md="6">
                            <MudField Label="Last Name" Variant="Variant.Outlined">@_lastName</MudField>
                        </MudItem>
                        <MudItem xs="12" md="6">
                            <MudField Label="Phone Number" Variant="Variant.Outlined">@_phoneNumber
                            </MudField>
                        </MudItem>
                        <MudItem xs="12" md="6">
                            <MudField Label="Email" Variant="Variant.Outlined">@_email</MudField>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
} *@

@code
{
public class CustomStringToBoolConverter : BoolConverter<string>
    {

        public CustomStringToBoolConverter()
        {
            SetFunc = OnSet;
            GetFunc = OnGet;
        }
        private string TrueString = "User Active";
        private string FalseString = "no, at all";
        private string NullString = "I don't know";

        private string OnGet(bool? value)
        {
            try
            {
                return (value == true) ? TrueString : FalseString;
            }
            catch (Exception e)
            {
                UpdateGetError("Conversion error: " + e.Message);
                return NullString;
            }
        }

        private bool? OnSet(string arg)
        {
            if (arg == null)
                return null;
            try
            {
                if (arg == TrueString)
                    return true;
                if (arg == FalseString)
                    return false;
                else
                    return null;
            }
            catch (FormatException e)
            {
                UpdateSetError("Conversion error: " + e.Message);
                return null;
            }
        }

    }
}