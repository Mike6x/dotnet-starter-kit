@typeparam TEntity
@typeparam TId
@typeparam TRequest

@inject IJSRuntime Js

<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<ErrorBoundary>
    <ChildContent>
        <MudDrawerContainer>
            <MudDrawer @bind-Open="@_openAdvancedSearch" Anchor="Anchor.Right" Elevation="5" Variant="@DrawerVariant.Persistent" Class="pa-2" Height="auto" Width="300px" Fixed="false">
                <MudDrawerHeader>
                    <MudText Typo="Typo.button">Advanced Search</MudText>
                </MudDrawerHeader>
                <MudNavMenu>
                    <MudTextField @bind-Value="SearchString" Immediate="true"
                                  Placeholder="@($"Search for {Context.EntityNamePlural}")" Adornment="Adornment.Start"
                                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"
                                  Style="flex:none!important;margin:0!important" TextChanged="OnSearchStringChanged">
                    </MudTextField>

                    @if (Context.AdvancedSearchEnabled)
                    {
                        <MudNavGroup Title="Columns" Icon="@Icons.Material.Outlined.FilterListOff" Class="mt-2 mb-n2" Expanded="false">
                            <div style="margin-top:10px!important">
                                <MudCheckBox Label="All" T="bool" Value="Context.AllColumnsChecked"
                                             ValueChanged="Context.AllColumnsCheckChanged"></MudCheckBox>
                                @foreach (var field in Context.Fields)
                                {
                                    <MudCheckBox @bind-Value="@field.CheckedForSearch" Label="@(field.DisplayName)"></MudCheckBox>
                                }
                            </div>
                        </MudNavGroup>
                        <MudDivider Class="my-2" />
                    }

                    @AdvancedSearchContent
                </MudNavMenu>
            </MudDrawer>

            <div>
                <FshTable @ref="_table" Elevation="25" ServerData="@ServerReloadFunc" Items="@_entityList" Filter="LocalSearch"
                          MultiSelection="true" @bind-SelectedItems="_selectedItems"
                          Loading="@Loading" LoadingProgressColor="@Color.Secondary" ChildRowContent="@ChildRowContent">

                    <ToolBarContent>
                        <div class="justify-center mud-text-align-center">
                            @if (_canCreate)
                            {
                                <MudButton DisableElevation Variant="Variant.Filled" OnClick="(() => InvokeModal())"
                                           StartIcon="@Icons.Material.Filled.Add" IconColor="Color.Surface" Color="Color.Primary" Class="mt-0 mb-3">
                                    Create
                                </MudButton>
                            }
                            @if (_canUpdate)
                            {
                                <MudButton DisableElevation Variant="Variant.Filled" OnClick="(() => EditSelectedAsync(_selectedItems))"
                                           StartIcon="@Icons.Material.Filled.Edit" IconColor="Color.Surface" Color="Color.Secondary" Class="mt-0 mb-3" Style="margin-left: 5px;">
                                    Edit
                                </MudButton>
                            }
                            @if (!_canUpdate)
                            {
                                <MudButton DisableElevation Variant="Variant.Filled" OnClick="(() => EditSelectedAsync(_selectedItems))"
                                           StartIcon="@Icons.Material.Filled.Edit" IconColor="Color.Surface" Color="Color.Secondary" Class="mt-0 mb-3" Style="margin-left: 5px;">
                                    View
                                </MudButton>
                            }
                            @if (_canDelete)
                            {
                                <MudButton DisableElevation Variant="Variant.Filled" OnClick="(() => DeleteSelectedAsync(_selectedItems))"
                                           StartIcon="@Icons.Material.Filled.Delete" IconColor="Color.Surface" Color="Color.Warning" Class="mt-0 mb-3" Style="margin-left: 5px;">
                                    Delete
                                </MudButton>
                            }
                            <MudButton DisableElevation Variant="Variant.Filled" OnClick="ReloadDataAsync"
                                       StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Info" Class="mt-0 mb-3" Style="margin-left: 5px;">
                                Reload
                            </MudButton>
                            @if (_canExport || _canImport)
                            {
                                <MudMenu Variant="Variant.Filled" Dense="true" DisableElevation="true" Style="margin-left: 5px;"
                                         StartIcon="@Icons.Material.Filled.MoreVert" IconColor="Color.Surface" Color="Color.Tertiary"
                                         AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter"
                                         Label="More">
                                    <ChildContent>
                                        @if (_canExport)
                                        {
                                            <MudMenuItem IconSize="Size.Small" IconColor="Color.Primary" Icon="@Icons.Material.Filled.Output"
                                                OnClick="@(ExportAsync)" Disabled="@Loading">Excel Export</MudMenuItem>
                                            <MudDivider />
                                        }

                                        @if (_canImport)
                                        {
                                            <MudMenuItem
                                                IconSize="Size.Small" IconColor="Color.Secondary" Icon="@Icons.Material.Filled.Input"
                                                OnClick="@(InvokeImportModal)" Disabled="@Loading">Excel Import</MudMenuItem>
                                            <MudDivider />
                                        }
                                        @if (_canDelete)
                                        {
                                            <MudMenuItem
                                                IconSize="Size.Small" IconColor="Color.Error" Icon="@Icons.Material.Filled.Clear"
                                                OnClick="@(ClearAllAsync)" Disabled="@Loading">Clear All</MudMenuItem>
                                        }
                                    </ChildContent>

                                </MudMenu>
                            }
                        </div>
                        <MudSpacer />
                        @if (_canSearch && !_advancedSearchExpanded)
                        {
                            <MudTextField @bind-Value="SearchString" Immediate="true" FullWidth="false" Disabled="_openAdvancedSearch"
                                          Placeholder="@($"Search for {Context.EntityNamePlural}")" Adornment="Adornment.End"
                                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-6"
                                          TextChanged="OnSearchStringChanged">
                            </MudTextField>
                        }
                        @if (_canSearch && (Context.AdvancedSearchEnabled || AdvancedSearchContent is not null))
                        {
                            <MudTooltip Text="Advanced Search" Color="Color.Secondary" Arrow="true" Placement="Placement.Left">
                                <MudIconButton Color="Color.Inherit" OnClick="@AdvanceSearchDrawer" Icon="@Icons.Material.Outlined.FilterAlt" Class="mt-0 mb-3"></MudIconButton>
                            </MudTooltip>
                        }
                    </ToolBarContent>

                    <HeaderContent>
                        <MudTh Style="text-align:right">Actions</MudTh>

                        @foreach (var field in Context.Fields)
                        {
                            <MudTh>
                                @if (Context.IsClientContext)
                                {
                                    <MudTableSortLabel SortBy="@field.ValueFunc">@field.DisplayName</MudTableSortLabel>
                                }
                                else
                                {
                                    <MudTableSortLabel T="TEntity" SortLabel="@field.SortLabel">@field.DisplayName</MudTableSortLabel>
                                }
                            </MudTh>
                        }
                    </HeaderContent>

                    <RowTemplate>
                        <MudTd DataLabel="Actions" Style="text-align: right">
                            @if (ActionsContent is not null)
                            {
                                @ActionsContent(context)
                            }
                            else if (HasActions)
                            {
                                <MudMenu Variant="Variant.Filled" DisableElevation="true"
                                         EndIcon="@Icons.Material.Filled.MoreVert" IconColor="Color.Primary"
                                         AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                                    @if (CanUpdateEntity(context))
                                    {
                                        <MudMenuItem Style="color:#004D40!important" @onclick="@(() => InvokeModal(context))">Edit</MudMenuItem>
                                    }
                                    @if (CanDeleteEntity(context))
                                    {
                                        <MudMenuItem Style="color:red!important" @onclick="@(() => Delete(context))">Delete</MudMenuItem>
                                    }
                                    @if (ExtraActions is not null)
                                    {
                                        @ExtraActions(context)
                                    }
                                </MudMenu>
                            }
                            else
                            {
                                <MudButton Variant="Variant.Filled" DisableElevation="true"
                                           StartIcon="@Icons.Material.Filled.DoNotTouch" IconColor="Color.Secondary" Size="Size.Small"
                                           Color="Color.Surface">"No Allowed Actions"
                                </MudButton>
                            }
                        </MudTd>
                        @foreach (var field in Context.Fields)
                        {
                            <MudTd DataLabel="@field.DisplayName">
                                @if (field.Template is not null)
                                {
                                    @field.Template(context)
                                }
                                else if (field.Type == typeof(bool))
                                {
                                    <MudCheckBox Value="@field.ValueFunc(context)" ReadOnly></MudCheckBox>
                                }
                                else
                                {
                                    <MudHighlighter Text="@field.ValueFunc(context)?.ToString()" HighlightedText="@SearchString" />
                                }
                            </MudTd>
                        }

                    </RowTemplate>

                    <PagerContent>
                        <TablePager />
                    </PagerContent>
                </FshTable>
            </div>
        </MudDrawerContainer>
    </ChildContent>

    <ErrorContent>
        <FshCustomError />
    </ErrorContent>
</ErrorBoundary>

@* *@
@* *@
@* <ErrorBoundary> *@
@*     <ChildContent> *@
@* *@
@*         @if (_canSearch && (Context.AdvancedSearchEnabled || AdvancedSearchContent is not null)) *@
@*         { *@
@*             <MudExpansionPanel @bind-IsExpanded="_advancedSearchExpanded" *@
@*                                Style="padding:10px!important; margin-bottom:10px!important;border-radius: var(--mud-default-borderradius) !important;" *@
@*                                Class="mud-table mud-table-outlined" Text="Advanced Search" Expanded=false> *@
@*                 <MudTextField @bind-Value="SearchString" Immediate="true" *@
@*                     Placeholder="@($"Search for {Context.EntityNamePlural}")" Adornment="Adornment.Start" *@
@*                     AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" *@
@*                     Style="flex:none!important;margin:0px!important" TextChanged="OnSearchStringChanged"> *@
@*                 </MudTextField> *@
@*                    @if (Context.AdvancedSearchEnabled) *@
@*                    { *@
@*                        <div style="margin-top:10px!important"> *@
@*                            <MudCheckBox Label="All Columns" T="bool" Checked="Context.AllColumnsChecked" *@
@*                                CheckedChanged="Context.AllColumnsCheckChanged"></MudCheckBox> *@
@*                            @foreach (var field in Context.Fields) *@
@*                            { *@
@*                                <MudCheckBox T="bool" @bind-Checked="@field.CheckedForSearch" Label="@(field.DisplayName)"></MudCheckBox> *@
@*                            } *@
@*                        </div> *@
@*                    }  *@
@*                 @AdvancedSearchContent *@
@* *@
@*             </MudExpansionPanel> *@
@*         } *@
@* *@
@*         <FshTable @ref="_table" Outlined ServerData="@ServerReloadFunc" Items="@_entityList" Filter="LocalSearch" *@
@*             Loading="@Loading" LoadingProgressColor="@Color.Secondary" ChildRowContent="@ChildRowContent"> *@
@* *@
@*             <ToolBarContent> *@
@*                 <div class="justify-center mud-text-align-center"> *@
@*                     @if (_canCreate) *@
@*                     { *@
@*                         <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" *@
@*                                    OnClick="(() => InvokeModal())" StartIcon="@Icons.Material.Filled.Add" *@
@*                             IconColor="Color.Surface" Class="mr-4">Create</MudButton> *@
@*                     } *@
@*                     <MudButton Variant="Variant.Filled" OnClick="ReloadDataAsync" DropShadow="false" *@
@*                                StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Secondary">Reload</MudButton> *@
@*                 </div> *@
@*                 <MudSpacer /> *@
@*                 @if (_canSearch && !_advancedSearchExpanded) *@
@*                 { *@
@*                     <MudTextField @bind-Value="SearchString" Immediate="true" FullWidth="false" *@
@*                         Placeholder="@($"Search for {Context.EntityNamePlural}")" Adornment="Adornment.End" *@
@*                         AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3" *@
@*                         TextChanged="OnSearchStringChanged"> *@
@*                     </MudTextField> *@
@*                 } *@
@*             </ToolBarContent> *@
@* *@
@*             <HeaderContent> *@
@*                 @if (Context.Fields is not null) *@
@*                 { *@
@*                     foreach (var field in Context.Fields) *@
@*                     { *@
@*                         <MudTh> *@
@*                             @if (Context.IsClientContext) *@
@*                             { *@
@*                                 <MudTableSortLabel SortBy="@field.ValueFunc">@field.DisplayName</MudTableSortLabel> *@
@*                             } *@
@*                             else *@
@*                             { *@
@*                                 <MudTableSortLabel T="TEntity" SortLabel="@field.SortLabel">@field.DisplayName</MudTableSortLabel> *@
@*                             } *@
@*                         </MudTh> *@
@*                     } *@
@*                 } *@
@*                 <MudTh Style="text-align:right">Actions</MudTh> *@
@*             </HeaderContent> *@
@* *@
@*             <RowTemplate> *@
@*                 @foreach (var field in Context.Fields) *@
@*                 { *@
@*                     <MudTd DataLabel="@field.DisplayName"> *@
@*                         @if (field.Template is not null) *@
@*                         { *@
@*                             @field.Template(context) *@
@*                         } *@
@*                         else if (field.Type == typeof(bool)) *@
@*                         { *@
@*                             <MudCheckBox T="bool" Value="GetBooleanValue(field.ValueFunc(context))" ReadOnly Color="Color.Secondary"></MudCheckBox> *@
@*                         } *@
@*                         else *@
@*                         { *@
@*                             <MudHighlighter Text="@field.ValueFunc(context)?.ToString()" HighlightedText="@SearchString" /> *@
@*                         } *@
@*                     </MudTd> *@
@*                 } *@
@*                 <MudTd DataLabel="Actions" Style="text-align: right"> *@
@*                     @if (ActionsContent is not null) *@
@*                     { *@
@*                         @ActionsContent(context) *@
@*                     } *@
@*                     else if (HasActions) *@
@*                     { *@
@*                         <MudMenu Label="Actions" Variant="Variant.Filled" DropShadow=false *@
@*                             EndIcon="@Icons.Material.Filled.KeyboardArrowDown" IconColor="Color.Secondary" direction="Direction.Left" *@
@*                             offsetX="true"> *@
@*                             @if (CanUpdateEntity(context)) *@
@*                             { *@
@*                                 <MudMenuItem @onclick="@(() => InvokeModal(context))">Edit</MudMenuItem> *@
@*                             } *@
@*                             @if (CanDeleteEntity(context)) *@
@*                             { *@
@*                                 <MudMenuItem Style="color:red!important" @onclick="@(() => Delete(context))">Delete</MudMenuItem> *@
@*                             } *@
@*                             @if (ExtraActions is not null) *@
@*                             { *@
@*                                 @ExtraActions(context) *@
@*                             } *@
@*                         </MudMenu> *@
@*                     } *@
@*                     else *@
@*                     { *@
@*                         <MudButton Variant="Variant.Filled" DropShadow="false" *@
@*                             StartIcon="@Icons.Material.Filled.DoNotTouch" IconColor="Color.Secondary" Size="Size.Small" *@
@*                             Color="Color.Surface"> *@
@*                             No Allowed Actions *@
@*                         </MudButton> *@
@*                     } *@
@*                 </MudTd> *@
@*             </RowTemplate> *@
@* *@
@*             <PagerContent> *@
@*                 <TablePager /> *@
@*             </PagerContent> *@
@* *@
@*         </FshTable> *@
@* *@
@*     </ChildContent> *@
@*     <ErrorContent> *@
@*         <FshCustomError /> *@
@*     </ErrorContent> *@
@* </ErrorBoundary> *@